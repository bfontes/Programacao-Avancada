
/* (a) */
valor = 10;
p1 = &valor;
*p1 = 20;
printf("%d \n", valor); --> O valor retornado será 20.



/* (b) */
temp = 26.5;
p2 = &temp;
*p2 = 29.0;
printf("%.1f \n", temp); --> O valor retornado será 29.

/* (c) */
p3 = &nome[0];
aux = *p3;
printf("%c \n", aux); --> o valor retornado será o do elemento armazenado na primeira posição do vetor, logo, P.

/* (d) */
p3 = &nome[4];
aux = *p3;
printf("%c \n", aux); -> será retornado E, que ocupa a posição 4 no vetor.

/* (e) */
p3 = nome;
printf("%c \n", *p3); --> será retornado P. p3 aponta para o array de caracteres nome, mas não é informado o índice, por padrão o endereço é o do primeiro indice.

/* (f) */
p3 = p3 + 4;
printf("%c \n", *p3); --> será retornado E, o incremento no ponteiro nos permite caminhar pelo array indo para o índice 4.

/* (g) */
p3--;
printf("%c \n", *p3); --> caminhando para o elemento 5 e após isso decrementado, será retornado o T.

/* (h) */
vetor[0] = 31;
vetor[1] = 45;
vetor[2] = 27;
p4 = vetor;
idade = *p4;
printf("%d \n", idade); --> idade recebe o conteúdo do endereço armazenado em p4, logo, por padrão, como não foi apontado o indíce, será retornado o primeiro valor no vetor, que é 31.

/* (i) */
p5 = p4 + 1;
idade = *p5;
printf("%d \n", idade); --> será retornado 45, pois com o incremento, podemos andar para o pŕoximo elemento do vetor que guarda o valor 45.

/* (j) */
p4 = p5 + 1;
idade = *p4;
printf("%d \n", idade); --> será retornado 27, como p5 aponta para array de inteiros e está no segundo índice, ao incrementar será recebido por p4 o último elemento de array.

/* (l) */
p4 = p4 - 2;
idade = *p4;
printf("%d \n", idade); --> caminhando ao início do array, será retornado 31.

/* (m) */
p5 = &vetor[2] - 1;
printf("%d \n", *p5); --> apontando para o array na posição 2 e decrementado, será retornado 45.

/* (n) */
p5++;
printf("%d \n", *p5); --> será retornado 27, pois ao caminhar pelo arry com a incrementação, andará uma casa e chegará ao valor de índice 2.


